// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                    Int                   @id @default(autoincrement())
  cedula                String                @unique
  nombre                String
  apellidos             String
  email                 String
  numCelular            String
  clave                 String
  roles                 Rol[]
  direcciones           DireccionUsuario[]
  productos             Producto[]
  encabezadosFactura    EncabezadoFactura[]
  calificacionesUsuario CalificacionUsuario[]
  MetodoPago            MetodoPago[]
}

model Rol {
  id          Int       @id @default(autoincrement())
  descripcion String
  usuarios    Usuario[]
}

model DireccionUsuario {
  id                Int                 @id @default(autoincrement())
  provincia         String
  canton            String
  distrito          String
  sennas            String
  codPostal         String
  telefono          String
  usuarioId         Int
  usuario           Usuario             @relation(fields: [usuarioId], references: [id])
  EncabezadoFactura EncabezadoFactura[]
}

model Producto {
  id                  Int               @id @default(autoincrement())
  nombre              String
  descripcion         String
  stock               Int
  precio              Decimal           @db.Decimal(10, 2)
  usuarioId           Int
  usuario             Usuario           @relation(fields: [usuarioId], references: [id])
  imagenes            ImagenProducto[]
  estadoProductoId    Int
  estadoProducto      EstadoProducto    @relation(fields: [estadoProductoId], references: [id])
  categoriaProductoId Int
  categoriaProducto   CategoriaProducto @relation(fields: [categoriaProductoId], references: [id])
  detallesFactura     DetalleFactura[]
}

model ImagenProducto {
  id         Int      @id @default(autoincrement())
  URL        String
  productoId Int
  producto   Producto @relation(fields: [productoId], references: [id])
}

model EstadoProducto {
  id          Int        @id @default(autoincrement())
  descripcion String
  productos   Producto[]
}

model CategoriaProducto {
  id          Int        @id @default(autoincrement())
  descripcion String
  productos   Producto[]
}

model EncabezadoFactura {
  id              Int              @id @default(autoincrement())
  fechaCompra     DateTime
  numTarjeta      String
  subTotal        Decimal          @db.Decimal(10, 2)
  total           Decimal          @db.Decimal(10, 2)
  metodoPagoId    Int
  metodoPago      MetodoPago       @relation(fields: [metodoPagoId], references: [id])
  usuarioId       Int
  usuario         Usuario          @relation(fields: [usuarioId], references: [id])
  detallesFactura DetalleFactura[]
  IdDireccion     Int
  direccion       DireccionUsuario @relation(fields: [IdDireccion], references: [id])
}

model EstadoPedido {
  id              Int              @id @default(autoincrement())
  descripcion     String
  detallesFactura DetalleFactura[]
}

model MetodoPago {
  id                Int                 @id @default(autoincrement())
  descripcion       String
  idUsuario         Int
  usuario           Usuario             @relation(fields: [idUsuario], references: [id])
  EncabezadoFactura EncabezadoFactura[]
}

model DetalleFactura {
  id                   Int               @id @default(autoincrement())
  cantidad             Int
  precioUnitario       Decimal           @db.Decimal(10, 2)
  encabezadosFacturaId Int
  encabezadosFactura   EncabezadoFactura @relation(fields: [encabezadosFacturaId], references: [id])
  productoId           Int
  producto             Producto          @relation(fields: [productoId], references: [id])
  estadoPedidoId       Int
  estadoPedido         EstadoPedido      @relation(fields: [estadoPedidoId], references: [id])
}

model CalificacionUsuario {
  id           Int     @id @default(autoincrement())
  calificacion Int
  comentario   String
  usuarioId    Int
  usuario      Usuario @relation(fields: [usuarioId], references: [id])
  isVendedor   Boolean
}
